
server:
  port: ${SERVER_PORT:8080}


spring:
  application:
    name: reservation-ctx

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:ezpark_db}
    username: ${DB_USERNAME:ezpark_user}
    password: ${DB_PASSWORD:ezpark123}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        hbm2ddl:
          default_schema: public
        format_sql: true
    show-sql: false
    defer-datasource-initialization: true #We have to ensure that the values are not created multiple times.
                                          # If our database schema is created by Hibernate, we should also add the following property to run our script only after Hibernate made its changes.

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

    producer:
      value-serializer: "org.springframework.kafka.support.serializer.JsonSerializer"
      properties:
        "[spring.json.add.type.headers]": false

    consumer:
      value-deserializer: "org.springframework.kafka.support.serializer.JsonDeserializer"
      properties:
        "[spring.json.value.default.type]": "com.ezpark.io.Invoice"
        "[spring.json.trusted.packages]": "com.ezpark.io"
      group-id: reservation-ctx-group
      auto-offset-reset: earliest
  listener:
    type: single

kafka:
  topics:
    reservation: "reservation-ctx"
    payment: "payment-ctx"
###################




logging:
  level:
    com.ezpark.io: ${LOG_LEVEL_APP:DEBUG}
    org.hibernate.SQL: ${LOG_LEVEL_HIBERNATE:DEBUG}
    org.springframework.kafka: ${LOG_LEVEL_KAFKA:DEBUG}
    org.springframework.transaction: DEBUG

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always
      show-components: always