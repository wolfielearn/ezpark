version: '3.8'
services:
  ezpark-db:
    image: postgres:15
    container_name: ezpark-postgres
    environment:
      POSTGRES_DB: ezpark_db
      POSTGRES_USER: ezpark_user
      POSTGRES_PASSWORD: ezpark123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./application/src/main/resources/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - ezpark-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ezpark_user -d ezpark_db" ]
      interval: 5s
      timeout: 5s
      retries: 10

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@mail.com"
      PGADMIN_DEFAULT_PASSWORD: "password"
    ports:
      - "80:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin  # Add persistent volume
    depends_on:
      - ezpark-db
    networks:
      - ezpark-network
  ezpark-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=ezpark-db #
      - DB_PORT=5432
      - DB_NAME=ezpark_db
      - DB_USERNAME=ezpark_user
      - DB_PASSWORD=ezpark123
      - DDL_AUTO=update
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      ezpark-db:
        condition: service_healthy
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
#      interval: 30s
#      timeout: 10s
#      retries: 3
    networks:
      - ezpark-network

  kafka:
    image: apache/kafka-native
    ports:
      - "9092:9092"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    networks:
      - ezpark-network

  kafka-ui:
    image: kafbat/kafka-ui:main
    ports:
      - "9090:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka
    networks:
      - ezpark-network

networks:
  ezpark-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: